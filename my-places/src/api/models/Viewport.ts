/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Location } from './Location';
import {
    LocationFromJSON,
    LocationFromJSONTyped,
    LocationToJSON,
} from './Location';

/**
 * 
 * @export
 * @interface Viewport
 */
export interface Viewport {
    /**
     * 
     * @type {Location}
     * @memberof Viewport
     */
    northeast: Location;
    /**
     * 
     * @type {Location}
     * @memberof Viewport
     */
    southwest: Location;
}

/**
 * Check if a given object implements the Viewport interface.
 */
export function instanceOfViewport(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "northeast" in value;
    isInstance = isInstance && "southwest" in value;

    return isInstance;
}

export function ViewportFromJSON(json: any): Viewport {
    return ViewportFromJSONTyped(json, false);
}

export function ViewportFromJSONTyped(json: any, ignoreDiscriminator: boolean): Viewport {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'northeast': LocationFromJSON(json['northeast']),
        'southwest': LocationFromJSON(json['southwest']),
    };
}

export function ViewportToJSON(value?: Viewport | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'northeast': LocationToJSON(value.northeast),
        'southwest': LocationToJSON(value.southwest),
    };
}

