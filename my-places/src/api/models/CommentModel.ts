/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Comment model returned from the database
 * @export
 * @interface CommentModel
 */
export interface CommentModel {
    /**
     * 
     * @type {any}
     * @memberof CommentModel
     */
    commentId: any | null;
    /**
     * 
     * @type {any}
     * @memberof CommentModel
     */
    placeId: any | null;
    /**
     * 
     * @type {any}
     * @memberof CommentModel
     */
    text: any | null;
    /**
     * 
     * @type {any}
     * @memberof CommentModel
     */
    createdAt: any | null;
    /**
     * 
     * @type {any}
     * @memberof CommentModel
     */
    updatedAt: any | null;
}

/**
 * Check if a given object implements the CommentModel interface.
 */
export function instanceOfCommentModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "commentId" in value;
    isInstance = isInstance && "placeId" in value;
    isInstance = isInstance && "text" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function CommentModelFromJSON(json: any): CommentModel {
    return CommentModelFromJSONTyped(json, false);
}

export function CommentModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommentModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'commentId': json['comment_id'],
        'placeId': json['place_id'],
        'text': json['text'],
        'createdAt': json['created_at'],
        'updatedAt': json['updated_at'],
    };
}

export function CommentModelToJSON(value?: CommentModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'comment_id': value.commentId,
        'place_id': value.placeId,
        'text': value.text,
        'created_at': value.createdAt,
        'updated_at': value.updatedAt,
    };
}

