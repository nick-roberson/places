/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Location } from './Location';
import {
    LocationFromJSON,
    LocationFromJSONTyped,
    LocationToJSON,
} from './Location';
import type { Viewport } from './Viewport';
import {
    ViewportFromJSON,
    ViewportFromJSONTyped,
    ViewportToJSON,
} from './Viewport';

/**
 * 
 * @export
 * @interface Geometry
 */
export interface Geometry {
    /**
     * 
     * @type {Location}
     * @memberof Geometry
     */
    location: Location;
    /**
     * 
     * @type {Viewport}
     * @memberof Geometry
     */
    viewport: Viewport;
}

/**
 * Check if a given object implements the Geometry interface.
 */
export function instanceOfGeometry(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "location" in value;
    isInstance = isInstance && "viewport" in value;

    return isInstance;
}

export function GeometryFromJSON(json: any): Geometry {
    return GeometryFromJSONTyped(json, false);
}

export function GeometryFromJSONTyped(json: any, ignoreDiscriminator: boolean): Geometry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'location': LocationFromJSON(json['location']),
        'viewport': ViewportFromJSON(json['viewport']),
    };
}

export function GeometryToJSON(value?: Geometry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'location': LocationToJSON(value.location),
        'viewport': ViewportToJSON(value.viewport),
    };
}

