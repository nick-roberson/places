/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Collection } from './Collection';
import {
    CollectionFromJSON,
    CollectionFromJSONTyped,
    CollectionToJSON,
} from './Collection';

/**
 * 
 * @export
 * @interface PlaceInsertModel
 */
export interface PlaceInsertModel {
    /**
     * 
     * @type {any}
     * @memberof PlaceInsertModel
     */
    name: any | null;
    /**
     * 
     * @type {any}
     * @memberof PlaceInsertModel
     */
    location: any | null;
    /**
     * 
     * @type {Collection}
     * @memberof PlaceInsertModel
     */
    collection?: Collection;
}

/**
 * Check if a given object implements the PlaceInsertModel interface.
 */
export function instanceOfPlaceInsertModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "location" in value;

    return isInstance;
}

export function PlaceInsertModelFromJSON(json: any): PlaceInsertModel {
    return PlaceInsertModelFromJSONTyped(json, false);
}

export function PlaceInsertModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaceInsertModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'location': json['location'],
        'collection': !exists(json, 'collection') ? undefined : CollectionFromJSON(json['collection']),
    };
}

export function PlaceInsertModelToJSON(value?: PlaceInsertModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'location': value.location,
        'collection': CollectionToJSON(value.collection),
    };
}

